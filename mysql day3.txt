MySQL DAY3
=======================
修改表格整体结构
向表中添加一个新的列
alter table 表名 add 列名 数据类型;

向表中删除一个列
alter table 表名 drop column 列名;

修改表中某列的数据类型
alter table 表名 modify column 列名 数据类型;

例子：
alter table orders modify column amount float;

练习题：
把customers中的salary由定长小数改为整数
alter table customers modify column salary int;

        微观修改表中的元素    宏观修改表的整体结构
添加    insert                alter table...add...
删除    delete                alter table...drop column...
修改    update                alter table...modify column...


修改表名
alter table 表名 rename 新的表名;

例子：
alter table teachers rename instructors;

修改列名
alter table 表名 change 旧名字 新名字 数据类型;

例子：
alter table courses change name c_name varchar(25);

对表添加唯一限制
alter table 表名 add constraint MyUniqueConstraint unique(列名1,列名2...，列名N);

例子：
alter table orders add constraint MyUniqueConstraint unique(o_id);

insert into orders values(107,'cup','2017-11-11 11:11:11',4,null);

对表取消唯一限制
alter table 表名 drop index MyUniqueConstraint;

例子：
alter table orders drop index MyUniqueConstraint;

insert into orders values(107,'cup','2017-11-11 11:11:11',4,null);

对表添加主键限制
alter table 表名 add primary key(列名1，列名2，...,列名n);

例子：
alter table orders add primary key(o_id);

insert into orders values(107,'cup','2017-11-11 11:11:11',4,null);

对表取消主键限制
alter table 表名 drop primary key;

例子：
alter table orders drop primary key;

对表添加外键限制
alter table 表名
add foreign key(列名1，列名2，...,列名N)
references 另一个表的表名(列名1，列名2，...,列名N);

例子：
alter table customers add primary key(id);

alter table orders
add foreign key(c_id)
references customers(id);

insert into orders values(109,'cup',null,9,10);

对表取消外键限制
alter table 表名 drop foreign key 自动生成的外键限制名;
【注意】
1.用show create table查看系统自动生成的限制名
2.是限制名，不是外键名


alter table orders drop foreign key orders_ibfk_1;

alter table customers drop primary key;

对表添加非空限制
alter table 表名 modify 列名 数据类型 not null;

例子：
use testDB;
alter table customers modify name varchar(20) not null;
insert into customers values (9,null,null,null,null,null);


对表取消非空限制
alter table customers modify name varchar(20) default null;
insert into customers values (9,null,null,null,null,null);

truncate table
保留表头，也即保留表的格式，只删除表中存放的数据内容

truncate table 表名;

例子：
truncate table customers2;

【注意】
1.truncate table 与 delete table 效果一样
2.drop table不仅删除表中的数据，连表的骨架也一起删除，需要用create table 和 insert into table重新建立表

练习题：
建立一个叫order_copy的表，其中包括字段如下：
OID int,
name varchar(25),
date datetime,
amount decimal(18,2)

用orders表中相应的列的数据，填充新的order_copy表

最后，在将这个order_copy表中的内容清空

create table order_copy(
OID int,
name varchar(25),
date datetime,
amount decimal(18,2)
);

insert into order_copy(OID,name,date,amount)
select o_id,o_name,date,amount
from orders;

truncate table order_copy;

子查询
【注意】
1.必须用括号包起来
2.order by 不能用于子查询，可以用group by
3.子查询返回多行的情况，只能用多数据操作符，比如in
4.between操作符不能连接子查询；但是，可以在子查询里面使用between

第一类：select语句中嵌套select语句
select 列名或者表达式 from 表名 
where 表达式 比较操作符 (子查询语句);

1.返回单值的子查询
select * from customers
where customers.id = (select c_id from orders where o_id = 107);

练习题：
查出购买pen的顾客的姓名
select name from customers
where id = (select c_id from orders where o_name = 'pen');

2.返回多值的子查询
select * from customers
where customers.id in (4,5);

select name from customers
where id in (select c_id from orders where o_name = 'ipad');

练习题：
查看消费额度大于5000元的顾客的姓名
select name from customers 
where customers.id in (select c_id from orders where amount > 5000);

思考题：
查看消费额度大于5000元的顾客的姓名和消费额度
对比以下两种答案的相同之处和不同之处，为什么？
1.
select name,amount from customers,orders where id = c_id and amount > 5000;

2.
select name,amount from customers,orders
where id in (select c_id from orders where amount > 5000)
and id = c_id;


查看顾客的消费大于7000元，同时地址是北京或者上海的顾客信息
提示：in,and,or

select * from customers
where customers.id in
(select c_id from orders where amount > 7000)
and (address = 'Beijing' or address = 'Shanghai')


练习题：
查看买过价值1万元以上的ipad的客户信息
select * from customers
where id in (select c_id from orders where o_name = 'ipad' and amount > 10000);


子查询与聚合函数配套练习

思考题：
选择消费最少的顾客的信息

select * from customers
where id = 
(select c_id from orders where amount = 
(select min(amount) from orders));

打印出orders表中amount的最小值
select min(amount) from orders; #200

select * from customers
where id = 
(select c_id from orders where amount = 
200);

花费是200元的客户是谁？
select c_id from orders where amount = 200; #5

select * from customers
where id = 5;   #Susan



练习题：
列出customers表中,全体顾客的平均工资
select avg(salary) from customers;   #6587.5


哪些顾客的c_id，其消费额度amount大于 全体顾客的平均工资
select c_id from orders 
where amount > (select avg(salary) from customers); #1,3,4,7,5

列出customers表中，消费额度大于 全体顾客的平均工资，这样的顾客的全部信息

select * from customers
where id in
(select c_id from orders 
where amount > (select avg(salary) from customers));


练习题*：
列出工资高于平均消费额的客户的总个数
提示：count(*)



group by ... having...
having语句嵌套子查询

思考题：
1.查询customers表中，各个城市对应的平均工资
select address, avg(salary) from customers
group by address;

2.查询customers表中，address以Sh开头的顾客信息
select * from customers
where address like 'Sh%';

3.查询customers表中，城市对应的平均工资大于5000，并且以Sh开头的城市信息
select address,avg(salary) from customers
group by address
having avg(salary) > 5000 and address like 'Sh%';

select address,avg(salary) from customers
group by address
having avg(salary) > 5000 and address in ('Shenzhen','Shanghai');



第二类：insert语句中嵌套select语句

insert into 表名 (列名1，列名2,...,列名n)
select 列名1，列名2,...,列名n from 表名2
where 条件;

练习题*：
使用嵌套查询，把customer表中消费额度大于8000元的客户的全部消息，存放在customers2表中

truncate table customers2;

insert into customers2
select id,name,age,address,salary from customers
where id in
(select c_id from orders where amount > 8000);




第三类：delete语句中嵌套select语句
delete from 表名1
where 列名 操作符
（select 列名 from 表名2 where 条件）;

【注意】
delete 与 update语句嵌套子查询的时候，子查询中涉及的表不同于主句中的
表

练习题：
把customers2 中，将salary小于customers表中平均工资的顾客信息删除

delete from customers2
where salary <
(select avg(salary) from customers);




第四类：update语句中嵌套select语句
update 表名1
set 列名 操作符 新的值
where 列名 操作符
(select 列名 from 表名2 where 条件);

练习题：
1.先把customers2 表中数据清空 
提示：truncate

truncate table customers2;

2.把customers表中的数据复制到customers2中 
提示：insert..select..

insert into customers2
select id,name,age,address,salary from customers;

3.把customers2表中，年龄大于customers表中平均年龄的顾客的工资翻倍
提示：update..select..

update customers2
set salary = salary * 2
where age > (select avg(age) from customers);


聚合函数
练习题：
求出customers表中一共有多少顾客，其工资大于所有人的平均工资

select count(*) from customers
where salary > (select avg(salary) from customers);


mid(列名，起始位置，长度)
substring(列名，起始位置，长度)

例子：
select mid(name,1,3) from customers;
【注意】
1：从起始位置为1开始
3：打印出三个字母的长度
第一个字母的位置是1，不是0

思考题：
用substring函数，打印出orders表中o_name列，从第3个字母开始，打印2个字母长度

select substring(o_name,3,2) from orders;


SQL Scalar函数:基于输入值，返回一个单一的值

ucase()：转化为大写字母
lcase(): 转化为小写字母

例子：
select ucase(name) from customers;
select lcase(name) from customers;

length():长度
select name,length(name) from customers;

round():对某个数值字段进行指定小数位数的四舍五入
select round(salary,1) from customers;

concat()：合并两个或多个字符串，称为一个字符串
select concat(o_name,' ',amount) from orders;

replace():搜索和替换一个字符串中的子字符串
update 表名
set 列名 = replace(列名，需要被替换的子字符串，用来代替的新的子字符串)
where 条件;

例子：
update orders set o_name = replace(o_name,'i','x');

trim():去除字符串中不想要的空字符
ltrim():left 左边
rtrim():right 右边

例子：
select trim('  Hi,Wei   ');
select ltrim('  Hi,Wei   ');
select rtrim('  Hi,Wei   ');


format():格式化某个字段的显示方式
format(要格式化的数字, 需要保留的小数点位置);

例子：
select format(12345.6789, 2);



SQL日期和时间函数
curdate():返回当前日期

例子：
对比如下两种写法的区别
select curdate();

select curdate() + 0;

select date(now());

datediff: date difference计算出两个日期之间相差的天数
select datediff('2015-05-23','2017-11-23');

date_add():添加一个时间值
date_add(起始日期，interval 表达式 单位)】

例子：
select date_add('1999-12-31 23:59:59',interval 1 second) result;

select date_add('1999-12-31 23:59:59',interval 1 day) result;


date_sub():减少一个时间值
select date_sub('2016-07-04',interval 1 day) result;

str_to_date():将字符串转为日期类型
select str_to_date('21,5,2013','%d,%m,%Y');

%Y 年，注意一定是大写的Y
%m 月
%d 日
%H 小时
%i 分钟
%T time时间
%W 星期几

date_format()调整日期显示的格式
select date_format('2017-12-25 23:59:59', '%Y,%m,%d');
select date_format('2017-12-25 23:59:59', '%T');
select date_format('2017-12-25 23:59:59', '%W');
select date_format('2017-12-25 23:59:59', '%H:%i');

练习题：
1.求出customers表中，地址为北京的顾客的总收入

2.选出customers表中，工资大于所有顾客平均工资的人，并且以大写字母显示姓名，以小写字母显示地址

3.列出customers表中的工资（只取正数部分），工资的位数

4.列出orders表中，下订单的时间（按照格式:月，日，年，小时输出），距离今日相差多少天

5.列出customers表中，每个顾客工资与所有人的平均工资的差值
































































































